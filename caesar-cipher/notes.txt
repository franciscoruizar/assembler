Nomenclaturas:
    Subrutinas:
        parametros -> [r0; r3]
        salida: [r0; r1]
        lower_camel_case
Subrutinas:
    1.  extraer_mensaje
    2.  extraer_clave -> tambien extrae la palabra clave
    3.  extraer_opcion
    5.  codificar
    6.  decodificar
    7.  decodificar_con_palabra_clave
    8.  length
    6.  convertir_ascii_entero
    7.  convertir_entero_ascii
    9.  print
    10. input



extraer_mensaje:
    input = "pepe;20;1"
    mensaje = ""
    i = 0

    while(input[i] != ';' && i < length(input)):
        mensaje = mensaje + input[i]
        i++

    return mensaje;

extraer_clave:
    input = "pepe;20;1"
    clave = ""
    i = 0

    count = 0

    while(input[i] != ';' && i < length(input)):
        i++

    i++

    while(input[i] != ';' && i < length(input))
        clave = clave + input[i]

    return clave

extraer_opcion:
    input = "pepe;20;1"
    opcion = ""
    i = 0

    count = 0

    while(input[i] != ';' && i < length(input)):
        i++

    i++

    while(input[i] != ';' && i < length(input))
        i++
    
    i++

    opcion = input[i]

    return opcion

// 65 a 90 mayus
// 97 A 122 minus

codificar(mensaje, clave):
    mensaje_codificado = ""

    for(int i = 0; i < length(mensaje); i++)
        carater_codificado = ""

        if es_minuscula(mensaje[i])
            carater_codificado = sumar_ascii_minus(mensaje[i], clave)
        else if es_mayuscula(mensaje[i])
            carater_codificado = sumar_ascii_mayus(mensaje[i], clave)
        else 
            ERROR

        mensaje_codificado = mensaje_codificado + carater_codificado

    return mensaje_codificado

// 97 A 122 minus
es_minuscula(character):
    if(character >= 97)
        if(character <= 122)
            return 1
    return 0

// 65 a 90 mayus
es_mayuscula(character):
    if(character >= 65)
        if(character <= 90)
            return 1
    return 0

sumar_ascii_minus(character, clave):
    aux = character + clave
    if(aux > 122)
        return aux - 26
    else
        return aux

sumar_ascii_mayus(character, clave):
    aux = character + clave

    if(aux > 90)
        return aux - 26
    else
        return aux
    

decodificar:
    mensaje = "pepe"
    clave = 2
    mensaje_codificado = ""

    for(int i = 0; i < length(mensaje); i++)
        mensaje_codificado = mensaje_codificado + (mensaje[i] + clave)

    return mensaje_codificado


    ToDo:
        Backlog:
            - crear subrutina extraer_clave -> tambien extrae la palabra clave              -> Eze
            - crear subrutina extraer_opcion                                                -> Eze
            - crear subrutina codificar
            - crear subrutina decodificar
            - crear subrutina decodificar_con_palabra_clave
            - crear subrutina length                                                        -> Eze
            - crear subrutina convertir_ascii_entero                                        -> Sergio
            - crear subrutina convertir_entero_ascii                                        -> Sergio
            - crear subrutina es_minuscula                                                  -> Fran
            - crear subrutina es_mayuscula                                                  -> Fran
            - crear subrutina sumar_ascii_minus                                             -> Fran
            - crear subrutina sumar_ascii_mayus                                             -> Fran
            - crear logica de opciones
            - unir subrutinas
            
        Doing:
        Do:
            - crear subrutina extraer_mensaje
            - crear subrutina input
            - crear subrutina print